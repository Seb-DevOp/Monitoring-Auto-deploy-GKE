name: Deploy to GKE

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate with GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Install GKE auth plugin
      run: gcloud components install gke-gcloud-auth-plugin
      

    - name: Inject Grafana password
      run: |
        sed -i "s/\${GRAFANA_PASSWORD}/${{ secrets.GRAFANA_PASSWORD }}/g" helm/values.yaml

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
          terraform_version: 1.6.6 
      
    - name: Terraform Init
      working-directory: terraform
      run: |
            terraform init \
                -backend-config="bucket=bucket_projet_master" \
                -backend-config="prefix=GKE_Tfsate"

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan -var "project_id=${{ secrets.GCP_PROJECT_ID }}" -var "grafana_admin_password=${{ secrets.GRAFANA_PASSWORD }}"
                         
    - name: Terraform apply
      working-directory: terraform
      run: |
            terraform apply -auto-approve \
              -var "project_id=${{ secrets.GCP_PROJECT_ID }}" \
              -var "grafana_admin_password=${{ secrets.GRAFANA_PASSWORD }}"

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials gke-monitoring-cluster --region europe-west1 --project ${{ secrets.GCP_PROJECT_ID }} 

        # Ajoute une pause simple
    - name: Wait for cluster to settle
      run: |
        echo "Waiting 180s for cluster to stabilize..."
        sleep 180
        kubectl get nodes
        kubectl get pods -A

    - name: Install Helm chart
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        n=0
        until [ "$n" -ge 5 ]
        do
        helm upgrade --install monitoring prometheus-community/kube-prometheus-stack \
            -f helm/values.yaml --namespace monitoring --create-namespace && break
        n=$((n+1))
        echo "Helm failed. Retrying in 20s..."
        sleep 20
        done